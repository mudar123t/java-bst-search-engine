/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.datastructuresproject2;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

/**
 *
 * @author ASUS
 */
public class Osama_Mudar_SuperSearchEngine extends javax.swing.JFrame {

    /**
     * Creates new form SuperSearchEngine
     */
    Osama_Mudar_LinkedList<JCheckBox> cbs = new Osama_Mudar_LinkedList<>();
    Osama_Mudar_LinkedList<String> files = new Osama_Mudar_LinkedList<>();
    DefaultListModel<String> model1 = new DefaultListModel<>();

    private static Osama_Mudar_LinkedList<String> readIgnoreWords(String filePath) throws IOException {
        Osama_Mudar_LinkedList<String> ignoreWords = new Osama_Mudar_LinkedList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                ignoreWords.add(line.trim());
            }
        }
        return ignoreWords;
    }

    public Osama_Mudar_SuperSearchEngine() {
        initComponents();

        cbs.add(cb1);
        cbs.add(cb2);
        cbs.add(cb3);
        cbs.add(cb4);
        cbs.add(cb5);
        cbs.add(cb6);
        cbs.add(cb7);
        cbs.add(cb8);
        cbs.add(cb9);
        cbs.add(cb10);

        files.add("file1");
        files.add("file2");
        files.add("file3");
        files.add("file4");
        files.add("file5");
        files.add("file6");
        files.add("file7");
        files.add("file8");
        files.add("file9");
        files.add("file10");

        pFilter.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        bFilter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        bSearch = new javax.swing.JButton();
        pFilter = new javax.swing.JPanel();
        cb1 = new javax.swing.JCheckBox();
        cb2 = new javax.swing.JCheckBox();
        cb3 = new javax.swing.JCheckBox();
        cb4 = new javax.swing.JCheckBox();
        cb5 = new javax.swing.JCheckBox();
        cb6 = new javax.swing.JCheckBox();
        cb7 = new javax.swing.JCheckBox();
        cb8 = new javax.swing.JCheckBox();
        cb9 = new javax.swing.JCheckBox();
        cb10 = new javax.swing.JCheckBox();
        bOk = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        bReset1 = new javax.swing.JButton();
        lSearchResult = new javax.swing.JLabel();
        rbPreOrder = new javax.swing.JRadioButton();
        rbInOrder = new javax.swing.JRadioButton();
        rbPostOrder = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(250, 246, 240));
        jPanel1.setMinimumSize(new java.awt.Dimension(1080, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 720));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(38, 87, 124));
        jPanel2.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("x");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1);
        jLabel1.setBounds(1120, 10, 20, 37);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("-");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel2);
        jLabel2.setBounds(1080, 10, 19, 37);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Search Spot");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 0, 350, 50);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1180, 60);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        jPanel1.add(txtSearch);
        txtSearch.setBounds(10, 120, 590, 60);

        bFilter.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bFilter.setForeground(new java.awt.Color(0, 0, 0));
        bFilter.setText("Filter Files");
        bFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFilterActionPerformed(evt);
            }
        });
        jPanel1.add(bFilter);
        bFilter.setBounds(350, 210, 130, 50);

        jList1.setOpaque(false);
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(640, 200, 520, 520);

        bSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bSearch.setForeground(new java.awt.Color(0, 0, 0));
        bSearch.setText("Search");
        bSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchActionPerformed(evt);
            }
        });
        jPanel1.add(bSearch);
        bSearch.setBounds(100, 210, 130, 50);

        pFilter.setOpaque(false);
        pFilter.setPreferredSize(new java.awt.Dimension(1130, 40));
        pFilter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cb1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb1.setSelected(true);
        cb1.setText("File 1");
        cb1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb1.setPreferredSize(new java.awt.Dimension(70, 27));
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });
        pFilter.add(cb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        cb2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb2.setSelected(true);
        cb2.setText("File 2");
        cb2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb2.setPreferredSize(new java.awt.Dimension(70, 27));
        cb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb2ActionPerformed(evt);
            }
        });
        pFilter.add(cb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        cb3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb3.setSelected(true);
        cb3.setText("File 3");
        cb3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb3.setPreferredSize(new java.awt.Dimension(70, 27));
        cb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb3ActionPerformed(evt);
            }
        });
        pFilter.add(cb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, -1, -1));

        cb4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb4.setSelected(true);
        cb4.setText("File 4");
        cb4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb4.setPreferredSize(new java.awt.Dimension(70, 27));
        cb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb4ActionPerformed(evt);
            }
        });
        pFilter.add(cb4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        cb5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb5.setSelected(true);
        cb5.setText("File 5");
        cb5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb5.setPreferredSize(new java.awt.Dimension(70, 27));
        pFilter.add(cb5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, -1, -1));

        cb6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb6.setSelected(true);
        cb6.setText("File 6");
        cb6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb6.setPreferredSize(new java.awt.Dimension(70, 27));
        pFilter.add(cb6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        cb7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb7.setSelected(true);
        cb7.setText("File 7");
        cb7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb7.setPreferredSize(new java.awt.Dimension(70, 27));
        pFilter.add(cb7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        cb8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb8.setSelected(true);
        cb8.setText("File 8");
        cb8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb8.setPreferredSize(new java.awt.Dimension(70, 27));
        pFilter.add(cb8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        cb9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb9.setSelected(true);
        cb9.setText("File 9");
        cb9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb9.setPreferredSize(new java.awt.Dimension(70, 27));
        pFilter.add(cb9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, -1, -1));

        cb10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cb10.setSelected(true);
        cb10.setText("File 10");
        cb10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cb10.setPreferredSize(new java.awt.Dimension(70, 27));
        pFilter.add(cb10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, -1, -1));

        bOk.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bOk.setText("Ok");
        bOk.setPreferredSize(new java.awt.Dimension(70, 20));
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pFilter.add(bOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 90, 40));

        bReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bReset.setText("Cancel");
        bReset.setPreferredSize(new java.awt.Dimension(70, 20));
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });
        pFilter.add(bReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 100, 40));

        bReset1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bReset1.setText("Reset");
        bReset1.setMaximumSize(new java.awt.Dimension(78, 31));
        bReset1.setMinimumSize(new java.awt.Dimension(78, 31));
        bReset1.setPreferredSize(new java.awt.Dimension(70, 20));
        bReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReset1ActionPerformed(evt);
            }
        });
        pFilter.add(bReset1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 100, 40));

        jPanel1.add(pFilter);
        pFilter.setBounds(40, 380, 540, 260);

        lSearchResult.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lSearchResult.setOpaque(true);
        lSearchResult.setPreferredSize(new java.awt.Dimension(580, 60));
        jPanel1.add(lSearchResult);
        lSearchResult.setBounds(640, 120, 520, 60);

        buttonGroup1.add(rbPreOrder);
        rbPreOrder.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rbPreOrder.setForeground(new java.awt.Color(0, 0, 0));
        rbPreOrder.setText("PreOrder");
        jPanel1.add(rbPreOrder);
        rbPreOrder.setBounds(490, 290, 110, 40);

        buttonGroup1.add(rbInOrder);
        rbInOrder.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rbInOrder.setForeground(new java.awt.Color(0, 0, 0));
        rbInOrder.setSelected(true);
        rbInOrder.setText("In Order");
        jPanel1.add(rbInOrder);
        rbInOrder.setBounds(20, 290, 130, 40);

        buttonGroup1.add(rbPostOrder);
        rbPostOrder.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rbPostOrder.setForeground(new java.awt.Color(0, 0, 0));
        rbPostOrder.setText("Post order");
        rbPostOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPostOrderActionPerformed(evt);
            }
        });
        jPanel1.add(rbPostOrder);
        rbPostOrder.setBounds(230, 290, 130, 40);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Search Results");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(810, 80, 170, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1175, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb1ActionPerformed

    private void cb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb2ActionPerformed

    private void cb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb3ActionPerformed

    private void cb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb4ActionPerformed

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        files = new Osama_Mudar_LinkedList<>();
        for (int i = 0; i < cbs.length(); i++) {
            if (cbs.get(i).isSelected()) {
                int fN = i + 1;
                files.add("file" + fN);
            }
        }
        pFilter.setVisible(false);
    }//GEN-LAST:event_bOkActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void bSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchActionPerformed
        if (!txtSearch.getText().trim().equals("")) {

            String ignoreListFilePath = "C:/Users/ASUS/Documents/NetBeansProjects/MudarShawakh_OsamaDervisoglu_Project2/HTML FIles/ignoreList.txt";
            Osama_Mudar_BinarySearchTree tree = new Osama_Mudar_BinarySearchTree();
            for (int i = 0; i < files.length(); i++) {
                String f = files.get(i);
                String filePath = "C:/Users/ASUS/Documents/NetBeansProjects/MudarShawakh_OsamaDervisoglu_Project2/HTML FIles/" + f + ".html";
                try {
                    Osama_Mudar_LinkedList<String> ignoreWords = readIgnoreWords(ignoreListFilePath);

                    File input = new File(filePath);
                    Document document = Jsoup.parse(input, "UTF-8");

                    String allText = document.getElementsByTag("text").text();

                    Scanner s = new Scanner(allText);

                    while (s.hasNext()) {
                        String word = s.next();
                        if (!ignoreWords.contains(word)) {
                            if (tree.contains(word)) {
                                if (Osama_Mudar_FileCounter.fileExist(f, tree.get(word).counters)) { // if we are increasing the counter of the file we are in 
                                    Osama_Mudar_FileCounter.getFileCounter(f, tree.get(word).counters).counter++;   //tree.get(word).counters.getFileCounter(f).counter++;
                                } else { // if we are creating new file counter for an existing word 
                                    Osama_Mudar_FileCounter fc = new Osama_Mudar_FileCounter(f);
                                    tree.get(word).counters.add(fc);
                                }
                            } else { // if we are inserting a completly new word
                                tree.insert(word);
                                Osama_Mudar_FileCounter fc = new Osama_Mudar_FileCounter(f);
                                tree.get(word).counters.add(fc);
                            }
                        }
                    }
                } catch (IOException e) {
                    System.err.println("Error reading the file: " + e.getMessage());
                }
            }
            if (rbInOrder.isSelected()) {
                tree.printTreeInOrder(model1);
                jList1.setModel(model1);
                model1 = new DefaultListModel();
            } else if (rbPostOrder.isSelected()) {
                tree.printTreePostOrder(model1);
                jList1.setModel(model1);
                model1 = new DefaultListModel();
            } else if (rbPreOrder.isSelected()) {
                tree.printTreePreOrder(model1);
                jList1.setModel(model1);
                model1 = new DefaultListModel();
            }

            //tree.printTree();
            lSearchResult.setText(tree.get(txtSearch.getText()).Data + " : " + tree.get(txtSearch.getText().trim()).getCounters());
        }

    }//GEN-LAST:event_bSearchActionPerformed

    private void rbPostOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPostOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPostOrderActionPerformed

    private void bFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFilterActionPerformed
        pFilter.setVisible(true);
        for (int i = 0; i < cbs.length(); i++) {
            cbs.get(i).setSelected(cbs.get(i).isSelected());
        }
    }//GEN-LAST:event_bFilterActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        pFilter.setVisible(false);
    }//GEN-LAST:event_bResetActionPerformed

    private void bReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReset1ActionPerformed
        for (int i = 0; i < cbs.length(); i++) {
            cbs.get(i).setSelected(true);
        }
    }//GEN-LAST:event_bReset1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Osama_Mudar_SuperSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Osama_Mudar_SuperSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Osama_Mudar_SuperSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Osama_Mudar_SuperSearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Osama_Mudar_SuperSearchEngine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bFilter;
    private javax.swing.JButton bOk;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bReset1;
    private javax.swing.JButton bSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cb1;
    private javax.swing.JCheckBox cb10;
    private javax.swing.JCheckBox cb2;
    private javax.swing.JCheckBox cb3;
    private javax.swing.JCheckBox cb4;
    private javax.swing.JCheckBox cb5;
    private javax.swing.JCheckBox cb6;
    private javax.swing.JCheckBox cb7;
    private javax.swing.JCheckBox cb8;
    private javax.swing.JCheckBox cb9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lSearchResult;
    private javax.swing.JPanel pFilter;
    private javax.swing.JRadioButton rbInOrder;
    private javax.swing.JRadioButton rbPostOrder;
    private javax.swing.JRadioButton rbPreOrder;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
